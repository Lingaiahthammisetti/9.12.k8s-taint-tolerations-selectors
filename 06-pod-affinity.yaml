apiVersion: v1
kind: Pod
metadata:
  name: pod-1
  labels:
    name: pod-1 # Added to support affinity rules
    env: pod-1
spec:
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: Always #keep this as always

---
apiVersion: v1
kind: Pod
metadata:
  name: pod-2
  labels:
    name: pod-2 
    purpose: affinity
spec:
  affinity:
    podAffinity: #This pod wants to be placed on the same node as any pod labeled name=app1
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: name
            operator: In
            values:
            - pod-1 
        topologyKey: topology.kubernetes.io/zone
        # topologyKey: "kubernetes.io/hostname"
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: Always #keep this as always

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-3
  labels:
    name: pod-3 # Added to support anti-affinity rules
    purpose: affinity
spec:
  affinity:
    podAntiAffinity: #This pod wants to avoid nodes where pods labeled name=pod1 are already running.
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: name
            operator: In
            values:
            - pod-1
        topologyKey: "kubernetes.io/hostname"
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: Always #keep this as always

# kubectl apply -f pods.yaml
# kubectl get pods -o wide
# kubectl describe pod pod-1
# kubectl describe pod pod-2
# kubectl describe pod pod-3

# Sample values:
# kubernetes.io/hostname=node-1
# topology.kubernetes.io/zone=us-east-1a
# topology.kubernetes.io/region=us-east-1

# Behavior Summary:
# pod-1: Starts anywhere.
# pod-2: Will be scheduled on the same node as pod-1.
# pod-3: Will be scheduled on a different node than pod-1.
